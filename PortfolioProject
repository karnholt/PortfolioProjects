-- Select *
-- From PortfolioProject..CovidDeaths
-- order by 3,4


-- Select *
-- From PortfolioProject..CovidVacinnations
-- order by 3,4

-- Select Data that we are going to be using

Select Location, date, total_cases, new_cases, total_deaths, population
From PortfolioProject..CovidDeaths
order by 1,2;

-- Looking at Total Cases vs Total Deaths
-- Shows the likelihood of dying if you contract covid in your country
Select Location, date, total_cases, total_deaths, (CAST(total_deaths as float))/(CAST (total_cases as float))*100 as DeathPercentage
From PortfolioProject..CovidDeaths
Where location like '%states%'
order by 1,2;

-- Looking at Total Cases vs Population
-- Shows what percentage of population has gotten covid
Select Location, date, Population, total_cases, (CAST(total_cases as float))/(CAST (Population as float))*100 as PercentInfected
From PortfolioProject..CovidDeaths
Where continent is not null
-- Where location like '%states%'
order by 1,2;

-- Looking at Countries with Highest Infection Rate compared to Population
Select Location, Population, MAX(total_cases) as HighestInfectionCount, MAX((CAST(total_cases as float))/(CAST (Population as float))*100) as PercentPopulationInfected
From PortfolioProject..CovidDeaths
Where continent is not null
-- Where location like '%states%'
Group by Location, Population
order by PercentPopulationInfected desc;

-- Looking at Countries with Highest Death Rate compared to Population
Select Location, MAX(CAST (total_deaths as INT)) as TotalDeathCount
From PortfolioProject..CovidDeaths
Where continent is not null
-- Where location like '%states%'
Group by Location, Population
order by TotalDeathCount desc;

-- LET'S BREAK THINGS DOWN BY CONTINENT
Select continent, MAX(CAST (total_deaths as INT)) as TotalDeathCount
From PortfolioProject..CovidDeaths
Where continent is not null
-- Where location like '%states%'
Group by continent 
order by TotalDeathCount desc;

-- GLOBAL NUMBERS

Select date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, CAST(SUM(new_deaths) as float)/CAST(SUM(new_cases) as float)*100 as DeathPercentage
From PortfolioProject..CovidDeaths
Where continent is not null
Group by date
order by 1,2;

Select SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, CAST(SUM(new_deaths) as float)/CAST(SUM(new_cases) as float)*100 as DeathPercentage
From PortfolioProject..CovidDeaths
Where continent is not null
order by 1,2;

-- Looking at Total Population vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) as RollingPeopleVaccinated,
(RollingPeopleVaccinated/Population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVacinnations vac
    on dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
order by 2,3

-- Use CTE
-- This data is a skewed. It will appear that more than 100% of people are vacinnated. However, multiple doses are provided (currently 2-3 depending on age) and so this would make more sense if using people_fully_vaccinated.
With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as 
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVacinnations vac
    on dea.location = vac.location
    and dea.date = vac.date
-- where dea.location like '%states%'
where dea.continent is not null and dea.location like '%states%'
-- order by 2,3
)
SELECT *, (CONVERT(float,RollingPeopleVaccinated)/CONVERT(float,Population))*100 as PercentVaccinated
FROM PopvsVac

-- TEMP TABLE

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
    Continent nvarchar(255),
    Location nvarchar(255),
    Date datetime,
    Population numeric, 
    New_vaccinations numeric,
    RollingPeopleVaccinated numeric
)
Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVacinnations vac
    on dea.location = vac.location
    and dea.date = vac.date
-- where dea.location like '%states%'
where dea.continent is not null and dea.location like '%states%'
-- order by dea.Date

SELECT *, (CONVERT(float,RollingPeopleVaccinated)/CONVERT(float,Population))*100 as PercentVaccinated
FROM #PercentPopulationVaccinated
Order by Date

-- Creating View to store data for later visualization
Create VIEW [PercentPopulationVaccinated] as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVacinnations vac
    on dea.location = vac.location
    and dea.date = vac.date
-- where dea.location like '%states%'
where dea.continent is not null
-- order by 2,3

SELECT *
FROM PercentPopulationVaccinated